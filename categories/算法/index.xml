<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>算法 on mannuan</title>
    <link>https://mannuan.github.io/categories/%E7%AE%97%E6%B3%95/</link>
    <description>Recent content in 算法 on mannuan</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Sat, 24 Aug 2019 23:04:03 +0800</lastBuildDate>
    
	<atom:link href="https://mannuan.github.io/categories/%E7%AE%97%E6%B3%95/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>反转链表</title>
      <link>https://mannuan.github.io/post/20190824230403/</link>
      <pubDate>Sat, 24 Aug 2019 23:04:03 +0800</pubDate>
      
      <guid>https://mannuan.github.io/post/20190824230403/</guid>
      <description> 反转链表 </description>
    </item>
    
    <item>
      <title>大数相加</title>
      <link>https://mannuan.github.io/post/20190824230046/</link>
      <pubDate>Sat, 24 Aug 2019 23:00:46 +0800</pubDate>
      
      <guid>https://mannuan.github.io/post/20190824230046/</guid>
      <description> 大数相加 </description>
    </item>
    
    <item>
      <title>快速排序</title>
      <link>https://mannuan.github.io/post/20190824224818/</link>
      <pubDate>Sat, 24 Aug 2019 22:48:19 +0800</pubDate>
      
      <guid>https://mannuan.github.io/post/20190824224818/</guid>
      <description> 快速排序 function sortQuick(arr, reverse=False){ if(arr.length) &amp;lt; 2: return _sort_between(arr, 0, len(arr)-1, reverse); } function _sort_between(arr, low, high, reverse){ let stack = [[low, high]]; while stack: low, high = stack.pop() pivlot = Math.random() } </description>
    </item>
    
    <item>
      <title>冒泡排序、选择排序和插入排序的比较</title>
      <link>https://mannuan.github.io/post/20190603215721/</link>
      <pubDate>Mon, 03 Jun 2019 21:57:21 +0800</pubDate>
      
      <guid>https://mannuan.github.io/post/20190603215721/</guid>
      <description> 冒泡排序 算法流程 假设存在一个长度为N的数组，按照从左至右的顺序升序排列。首先，通过N-1次数
javascript代码 function bubbleSort(){ var arr = arguments[0]; for(var end=arr.length-1; end&amp;gt;0; end--){ for(var i=0; i&amp;lt;end; i++){ if(arr[i] &amp;gt; arr[end]){ var tmp = arr[i]; arr[i] = arr[end]; arr[end] = tmp; } } } } function randomNum(max=100, start=33){ return Math.floor(Math.random() * max + start); } var arr = []; var length = randomNum(30, 1); for(var i=0; i&amp;lt;length; i++){ // 创建随机数组  arr.push(randomNum()); } console.log(arr); bubbleSort(arr); console.log(arr);  选择排序 </description>
    </item>
    
  </channel>
</rss>