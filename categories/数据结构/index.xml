<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>数据结构 on mannuan</title>
    <link>https://mannuan.github.io/categories/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/</link>
    <description>Recent content in 数据结构 on mannuan</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Fri, 26 Jul 2019 16:27:22 +0800</lastBuildDate>
    
	<atom:link href="https://mannuan.github.io/categories/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>二叉树的知识点整理</title>
      <link>https://mannuan.github.io/post/20190726162722/</link>
      <pubDate>Fri, 26 Jul 2019 16:27:22 +0800</pubDate>
      
      <guid>https://mannuan.github.io/post/20190726162722/</guid>
      <description> 二叉排序树  又称为二叉排序树，或二叉搜索树
 如果它的左子树不为空，那么左子树上所有的结点值都小于它的根结点的值；如果它的右子树不为空，那么右子树上所有的结点值都大于它的根节点的值。
二叉树的前序遍历 </description>
    </item>
    
    <item>
      <title>冒泡、选择、插入排序</title>
      <link>https://mannuan.github.io/post/20190717114226/</link>
      <pubDate>Wed, 17 Jul 2019 11:42:26 +0800</pubDate>
      
      <guid>https://mannuan.github.io/post/20190717114226/</guid>
      <description>/** * 冒泡，插入，选择排序 * * Author: nameczz */ // 冒泡排序 const bubbleSort = (arr) =&amp;gt; { if (arr.length &amp;lt;= 1) return for (let i = 0; i &amp;lt; arr.length; i++) { let hasChange = false for (let j = 0; j &amp;lt; arr.length - i - 1; j++) { if (arr[j] &amp;gt; arr[j + 1]) { const temp = arr[j] arr[j] = arr[j + 1] arr[j + 1] = temp hasChange = true } } // 如果false 说明所有元素已经到位  if (!</description>
    </item>
    
    <item>
      <title>后序遍历非递归算法</title>
      <link>https://mannuan.github.io/post/20190707215537/</link>
      <pubDate>Sun, 07 Jul 2019 21:55:37 +0800</pubDate>
      
      <guid>https://mannuan.github.io/post/20190707215537/</guid>
      <description></description>
    </item>
    
    <item>
      <title>算法题编码如何躲坑</title>
      <link>https://mannuan.github.io/post/20180723113409/</link>
      <pubDate>Mon, 23 Jul 2018 11:34:09 +0800</pubDate>
      
      <guid>https://mannuan.github.io/post/20180723113409/</guid>
      <description>   错误的代码 正确代码 备注     break; break 在任何语言中break后面都没有&amp;rdquo;;&amp;rdquo;
比如在牛客的在线js中会出现”数组越界的提示“   True和true
False和false 正确区分大小写 js中小写
python中大写    </description>
    </item>
    
    <item>
      <title>算法题读题注意点</title>
      <link>https://mannuan.github.io/post/20180723093847/</link>
      <pubDate>Mon, 23 Jul 2018 09:38:47 +0800</pubDate>
      
      <guid>https://mannuan.github.io/post/20180723093847/</guid>
      <description> 算法题尤其要注意细节
    描述 解读 备注     非减排序的数组 包含了两种情况：
1. 递增
2.数字保持不变 剑指offer-06-翻转的数组   若干个 表示\(\geq 0\) 剑指offer-06-翻转的数组   计算机浮点数之间的误差在-0.0000001和0.0000001之间，两个数相等 计算机浮点数存在误差    高效的算法基本上最多使用两个指针     链表问题的关键点：
1.确定头节点；
2.保存上一个指针的状态；     循环问题的解决思路 找到前后不变的状态作为终止条件    具有很多标志位的问题 必须找到不变的规律(终止条件)    做二叉树类型的题目 必用递归 因为二叉树太复杂了，一般在面试的时候不用非递归实现    </description>
    </item>
    
  </channel>
</rss>