<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>linux on mannuan</title>
    <link>https://mannuan.github.io/categories/linux/</link>
    <description>Recent content in linux on mannuan</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Mon, 17 Jun 2019 14:56:15 +0800</lastBuildDate>
    
	<atom:link href="https://mannuan.github.io/categories/linux/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>linux 和windows下使用ffmpeg将mkv转换为mp4</title>
      <link>https://mannuan.github.io/post/20190617145615/</link>
      <pubDate>Mon, 17 Jun 2019 14:56:15 +0800</pubDate>
      
      <guid>https://mannuan.github.io/post/20190617145615/</guid>
      <description>ffmpeg -i 名称.mkv -s hd720 -c:v libx264 -crf 23 -c:a aac -strict -2 名称.</description>
    </item>
    
    <item>
      <title>在UEFI模式下，linux误删EFI分区后，重新恢复引导</title>
      <link>https://mannuan.github.io/post/20190611191355/</link>
      <pubDate>Tue, 11 Jun 2019 19:13:55 +0800</pubDate>
      
      <guid>https://mannuan.github.io/post/20190611191355/</guid>
      <description>遇到上面情况，我们通常使用boot-repair修复引导。但是这时会弹出一个错误： GPT detected. Please create a BIOS-Boot partition
 遇到这个情况以后，我就疯狂百度资料，一直在找现成的解决方案，但是都不是没有解决问题的方案。这个期间我大概花了我半天的时间在检索资料，之后由于实在找不到资料。我只能冷静地分析这个错误，&amp;rdquo;Please create Bios-Boot partition&amp;rdquo;这个提示其实是提醒你创建一个用于引导的分区。由于是在UEFI模式下面，所以我们要创建一个格式为fat32 标识为boot, esp的分区（右键可以设置标签），如下图所示：
创建好上面的分区以后，再使用boot-repair进行修复引导，就不会报错了😀😀😀😀😀</description>
    </item>
    
    <item>
      <title>linux不需要重装系统就可以调整分区</title>
      <link>https://mannuan.github.io/post/20190610204627/</link>
      <pubDate>Mon, 10 Jun 2019 20:46:27 +0800</pubDate>
      
      <guid>https://mannuan.github.io/post/20190610204627/</guid>
      <description>介绍 Gparted是一个针对于linux分区调整的可视化工具。它是一个微型的linux操作系统封装了一些分区的命令，以一个iso格式的文件存在，选择gparted- live-*.iso这样的文件点击下载。
刻录 下载完成之后，你需要准备一个刻录工具（比如软碟通）和一个8G以上的U盘。这个刻录的教程，百度一下就有很多。
使用 刻录完成以后，你在开机</description>
    </item>
    
    <item>
      <title>linux实现内网穿透</title>
      <link>https://mannuan.github.io/post/20190602141130/</link>
      <pubDate>Sun, 02 Jun 2019 14:11:30 +0800</pubDate>
      
      <guid>https://mannuan.github.io/post/20190602141130/</guid>
      <description>穿透工具：frps
进程管理工具：supervisor</description>
    </item>
    
    <item>
      <title>linux命令之nohup</title>
      <link>https://mannuan.github.io/post/20190602135144/</link>
      <pubDate>Sun, 02 Jun 2019 13:51:44 +0800</pubDate>
      
      <guid>https://mannuan.github.io/post/20190602135144/</guid>
      <description> 结合后台运行命令&amp;amp;使用  nohup command &amp;gt;&amp;gt; log_path 2&amp;gt;&amp;amp;1 &amp;amp;</description>
    </item>
    
    <item>
      <title>jupyter 如何设置密码</title>
      <link>https://mannuan.github.io/post/20190515153220/</link>
      <pubDate>Wed, 15 May 2019 15:32:20 +0800</pubDate>
      
      <guid>https://mannuan.github.io/post/20190515153220/</guid>
      <description>打开python命令行，输入
from notebook.auth import passwd passwd() 以密码&amp;rdquo;123&amp;rdquo;为例，输出结果得到如下
&amp;#39;sha1:da00fa1e950a:0adb64c8359ef97932e5dde02d6167e140bac4e0&amp;#39; 然后把上面的sha写入到配置文件&amp;rdquo;jupyter_notebook_config.py&amp;rdquo;, 这个文件一般需要使用命令生成
完整的一条配置命令如下：
c.NotebookApp.password = &amp;#39;sha1:da00fa1e950a:0adb64c8359ef97932e5dde02d6167e140bac4e0&amp;#39; 上面这条配置命令可以放在配置文件任意位置</description>
    </item>
    
    <item>
      <title>jupyter_notebook_config.py 文件的生成命令</title>
      <link>https://mannuan.github.io/post/20190515151225/</link>
      <pubDate>Wed, 15 May 2019 15:12:25 +0800</pubDate>
      
      <guid>https://mannuan.github.io/post/20190515151225/</guid>
      <description>jupyter notebook --generate-config</description>
    </item>
    
    <item>
      <title>apt-get: error loading libgcc_s.so.1的解决方案</title>
      <link>https://mannuan.github.io/post/20190513111449/</link>
      <pubDate>Mon, 13 May 2019 11:14:49 +0800</pubDate>
      
      <guid>https://mannuan.github.io/post/20190513111449/</guid>
      <description>出现这个问题的主要原因是&amp;rdquo;/lib/x86_64-linux-gnu/&amp;ldquo;目录下缺少libgcc_s.so.1
解决方案：从其他相同操作系统的主机上的&amp;rdquo;/lib/x86_64-linux-gnu/&amp;ldquo;目录，拷贝libgcc_s.so.1</description>
    </item>
    
    <item>
      <title>dpkg error: package `x&#39; contains empty filename，Sub-process /usr/bin/dpkg returned an error code (2)</title>
      <link>https://mannuan.github.io/post/20190513111048/</link>
      <pubDate>Mon, 13 May 2019 11:10:48 +0800</pubDate>
      
      <guid>https://mannuan.github.io/post/20190513111048/</guid>
      <description>后面的错误“Sub-process /usr/bin/dpkg returned an error code (2)”是由于前面的一个错误引起的
因此，只需要解决前面的错误就行了
解决这个错误其实很简单，只需要理解前面一个错误里面的&amp;rdquo;empty filename&amp;rdquo;就行了
我看过很多教程，说只要删除/var/lib/dpkg/info/x.list就可以了，我试过，每次删除，之后这个目录下面都会重新生成x.list文件
之后我找到解决方案，发现只要把x.list改为x.list.broke就可以了，之后就没有&amp;rdquo;empty filename的报错&amp;rdquo;</description>
    </item>
    
    <item>
      <title>阿里云免费ssl证书申请</title>
      <link>https://mannuan.github.io/post/20190502140132/</link>
      <pubDate>Thu, 02 May 2019 14:01:32 +0800</pubDate>
      
      <guid>https://mannuan.github.io/post/20190502140132/</guid>
      <description> 第一步：在阿里云申请域名  登录阿里云， 在搜索框中输入&amp;rdquo;域名 控制台&amp;rdquo;， 进行域名的购买或则注册。   我强烈不推荐购买阿里云的二手域名，虽然价格很便宜，但是大多数域名都有问题，比如被注册局暂停解析等等
 第二步：在阿里云申请免费的ssl证书  同样在搜索框中输入&amp;rdquo;dns 控制台&amp;rdquo;， 在域名的列表里面可以看到你已经购买的域名， 然后在列表的每个item中点击“更多”，出现&amp;rdquo;ssl&amp;rdquo;证书的字样，点击进去。 选择免费版的ssl证书（这里只能单个子域名进行注册） 点击申请，跳到ssl证书列表页面， 点击验证，大概过5-6分钟，ssl证书就可以审核通过， 下载证书我推荐下载nginx版本的，nginx配置域名最方便，配置域名的教程可以参看我的https服务器搭建详细教程(ubuntu系统实测可行)这个教程  </description>
    </item>
    
    <item>
      <title>linux如何查看文件夹占用磁盘空间</title>
      <link>https://mannuan.github.io/post/20190502134205/</link>
      <pubDate>Thu, 02 May 2019 13:42:05 +0800</pubDate>
      
      <guid>https://mannuan.github.io/post/20190502134205/</guid>
      <description>du -h -d 1  查看当前目录下面所有文件夹所占的空间
 </description>
    </item>
    
    <item>
      <title>https服务器搭建详细教程(ubuntu系统实测可行)</title>
      <link>https://mannuan.github.io/post/20190501225058/</link>
      <pubDate>Wed, 01 May 2019 22:50:58 +0800</pubDate>
      
      <guid>https://mannuan.github.io/post/20190501225058/</guid>
      <description>第一步：把指定的域名绑定到服务器指定的端口 1、安装nginx sudo apt-get install nginx  查看nginx版本，确认安装成功
nginx -v  安装完nginx以后，通过浏览器访问127.0.0.1，再次确认安装成功（访问127.0.0.1其实等价于访问127.0.0.1:80）  2、修改nginx配置文件 sudo vim /etc/nginx/nginx.conf  通过上面的命令打开文件以后，键盘按 “i” 键，进入编辑模式，然后找到类似下面的内容：   ssl的获取可以参看我的阿里云免费ssl证书申请
http { #在这里填写你的配置  #下面省略若干行..... }  完整的配置是这样的（第一个server配置的是http服务，第二个server配置的https服务）：  http { server { listen 80; server_name 指定的域名; root html; index index.html index.htm; location / { proxy_pass http://127.0.0.1:指定的端口/; proxy_set_header X-Real-IP $remote_addr; proxy_set_header Host $host; proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; proxy_http_version 1.1; proxy_set_header Upgrade $http_upgrade; proxy_set_header Connection &amp;#34;upgrade&amp;#34;; proxy_redirect off; } } server { listen 443; server_name 指定的域名; ssl on; root html; index index.</description>
    </item>
    
    <item>
      <title>linux修改设备名</title>
      <link>https://mannuan.github.io/post/20190501213953/</link>
      <pubDate>Wed, 01 May 2019 21:39:53 +0800</pubDate>
      
      <guid>https://mannuan.github.io/post/20190501213953/</guid>
      <description>只要修改两个文件：
 /etc/hostname
 /etc/hosts
  </description>
    </item>
    
    <item>
      <title>linux创建用户并给用户sudo权限</title>
      <link>https://mannuan.github.io/post/20190211224353/</link>
      <pubDate>Mon, 11 Feb 2019 22:43:53 +0800</pubDate>
      
      <guid>https://mannuan.github.io/post/20190211224353/</guid>
      <description>这些年，我看了很多关于创建linux用户的博客。发现当中都是写了一大堆废话，都是复制粘贴的，而且介绍的一点都不全面，有些甚至直接是错误的。
我在这里将按如下步骤来详细的描述创建用户的过程。以用户名test为例：
1、
useradd -d /home/test -m test 上面表示的是创建一个名为test的用户，且同时给他在home目录下面创建了文件夹。
2、
passwd test 上面的命令是给test用户设置密码。
3、
usermod -s /bin/bash test 上面这段代码的含义是，把命令行的模式换为bash，默认是sh。你肯定会问为什么要这样，因为如果使用默认的sh，你打开终端的提示符显示的是$，不是“用户名$主机名”这种形式。
4、
usermod -a -G sudo test usermod -a -G adm test 上面这个代码的意思是，把test用户添加到sudo和admin用户组里面。这里要注意的是系统里面的admin的用户组的名字是&amp;rdquo;adm&amp;rdquo;。
还有，我经常看到博客说只要改/etc/sudoers文件就可以了。虽然这种方法可行，但是这种方法不利于管理用户。最重要的是，这种方法很low，很垃圾，我很看不起这种方法。做为高水平的技术人才，该装逼的地方还是要装逼的，这样才可彰显牛逼之处。
5、
groups test 上面这个命令的意思是检查test所在的用户组
6、
sudo su 首先，你要重新登录一下，然后输入上面这个命令，密码就是使用该用户的密码，然后你就发现可以sudo了，哈哈哈哈啊哈哈，这样你就成功了。</description>
    </item>
    
  </channel>
</rss>