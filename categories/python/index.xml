<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>python on mannuan</title>
    <link>https://mannuan.github.io/categories/python/</link>
    <description>Recent content in python on mannuan</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Thu, 04 Jul 2019 20:27:04 +0800</lastBuildDate>
    
	<atom:link href="https://mannuan.github.io/categories/python/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>python中的如何把当前时间转换为字符串</title>
      <link>https://mannuan.github.io/post/20190704202704/</link>
      <pubDate>Thu, 04 Jul 2019 20:27:04 +0800</pubDate>
      
      <guid>https://mannuan.github.io/post/20190704202704/</guid>
      <description>import datetime now_time_str = datetime.datetime.now().strftime(&amp;#34;%Y%m%d%H%M%S&amp;#34;) # 类似输出20190704213307</description>
    </item>
    
    <item>
      <title>python3 快速替换多个字符的高效方法</title>
      <link>https://mannuan.github.io/post/20190620141309/</link>
      <pubDate>Thu, 20 Jun 2019 14:13:09 +0800</pubDate>
      
      <guid>https://mannuan.github.io/post/20190620141309/</guid>
      <description>前言 在我们遇到需要把字符串中多个指定字符转换成其他字符时，我们通常使用多个.replace()方法实现替换的目的。然而，当需要替换的字符很多的时候，使用.replace()就太麻烦了。
解决方案 str.maketrans(in_str1, out_str2), 这是一个类似于对字符串之间建立映射的一个方法，且两个输入字符串的长度必须相等。下面我将举一个简单例子来说明它的使用方法：
a = &amp;#34;hello-world!&amp;#34; trans = str.maketrans(&amp;#34;h-w&amp;#34;, &amp;#34;H W&amp;#34;) # 建立映射关系 a.translate(trans) // 输出&amp;#34;Hello World!</description>
    </item>
    
    <item>
      <title>python with 打开多个文件</title>
      <link>https://mannuan.github.io/post/20190605154442/</link>
      <pubDate>Wed, 05 Jun 2019 15:44:42 +0800</pubDate>
      
      <guid>https://mannuan.github.io/post/20190605154442/</guid>
      <description>with open(&amp;#34;./example.html&amp;#34;, &amp;#34;r&amp;#34;) as f1, open(&amp;#34;./example.css&amp;#34;, &amp;#34;r&amp;#34;) as f2, open(&amp;#34;./example.svg&amp;#34;, &amp;#34;r&amp;#34;) as f3: html = f1.read() css = f2.read() svg = f3.</description>
    </item>
    
  </channel>
</rss>