<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>网络部分 on mannuan</title>
    <link>https://mannuan.github.io/tags/%E7%BD%91%E7%BB%9C%E9%83%A8%E5%88%86/</link>
    <description>Recent content in 网络部分 on mannuan</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Mon, 30 Sep 2019 16:41:01 +0800</lastBuildDate>
    
	<atom:link href="https://mannuan.github.io/tags/%E7%BD%91%E7%BB%9C%E9%83%A8%E5%88%86/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>HTTP协议类</title>
      <link>https://mannuan.github.io/post/20190930164101/</link>
      <pubDate>Mon, 30 Sep 2019 16:41:01 +0800</pubDate>
      
      <guid>https://mannuan.github.io/post/20190930164101/</guid>
      <description>HTTP协议类 一面/二面 HTTP协议的主要特点  无连接: 连接一次就会断掉，不会保持连接; 无状态: 客户端和服务端建立连接后传输数据，断开连接，再次建立连接后，无法区分是不是同一个连接; 简单快速: 每个资源的URI都是固定的，访问资源只需要输入URI就行了; 灵活: 通过一个http协议就可以完成不同类型的传输;
HTTP报文的组成部分 请求报文
 请求行(http方法,页面地址,http协议/版本)，请求头(key-value值)，空行，请求体；  响应报文
 状态行(http协议/版本, http状态码)，响应头，空行，响应体；
HTTP方法 GET: 获取资源
 POST: 传输资源
 PUT: 更新资源
 DELETE: 删除资源
 HEAD: 获得报文首部
POST和GET的区别 GET在浏览器回退时是无害的，而POST会再次提交请求;
 GET请求会被浏览器主动缓存，而POST不会，除非手动设置;
 GET请求参数会被完整保留在浏览器历史记录里，而POST中的参数不会被保留;
 GET请求在URL中传送的参数是有长度限制的，而POST没有限制;
 GET参数通过URL传递，POST放在Request body中;
HTTP状态码 1xx: 指示信息-表示请求已接收，继续处理;
 2xx: 成功-表示请求已被成功接收;
 3xx: 重定向-要完成请求必须进行更进一步的操作;
 4xx: 客户端错误-请求有语法错误或请求无法实现;
 5xx: 服务器错误一服务器未能实现合法的请求;
 200 OK: 客户端请求成功;
 206 Partial Content: 客户发送了一个带有Range 头的GET请求，服务器完成了它;</description>
    </item>
    
  </channel>
</rss>